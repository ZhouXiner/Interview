一、刚体运动(物体间的运动由平移和旋转组成)
描述方式有旋转矩阵、欧拉角、四元数三种
1.旋转矩阵
旋转矩阵由正交基引出，已知两个不同坐标系下的正交基和某一点在两个坐标系下的坐标，显然两个坐标乘上各
自的正交基，表示的向量不变，一个变换就得到了旋转矩阵，每个参数都是不同坐标基分量之间的余弦值
特性：
行列式为１，正交(R*R^T = I，逆矩阵就是转置矩阵，各个行向量、列向量都正交)
正交矩阵的性质：保持两点间欧式距离不变的线性变换(先有鸡还是先有蛋，可能旋转矩阵比正交矩阵出来的早)
行列式的性质：二阶行列式的绝对值表示由两个二维向量围成的平行四边形的面积，同理三维就是体积，或者理
　　　　　　　解为面积(体积)的放大倍数，所以R就表示旋转过后体积不会变
　　　　　　　如果不满秩(线性无关列的最大数目)，行列式为０　
变换矩阵T,将旋转和平移都放进去了

旋转向量：
旋转矩阵只有三个自由度，变换矩阵只有６个自由度，冗余很大，显然我们可以用旋转轴加旋转角的
方式来表示旋转矩阵
旋转向量到旋转矩阵：由罗德里格斯公式决定；反之：角度可以由迹推，循环轴满足Rn=n,所以n
为R的特征值为１的特征向量
但是旋转向量有奇异性，当角度大于2π时，就奇异性了

2.欧拉角
欧拉角更加直观，描述了三个基元方向上的旋转角度，最常见的有yaw-pitch-roll的形式(ZYX形式)
yaw角，表示在z轴上的旋转，之后再绕旋转后的y轴旋转，得到俯仰角pitch，最后得到roll角
但是存在万向锁问题，即当pitch角为+-90度，第一次轴和第三次轴就是一个轴，丢失了一个自由度

3.四元数
四元数三个虚部，一个实部，ij=k表示绕着i旋转１80，再绕着j旋转180才等于绕着k旋转180
四元数的乘法不能交换，因为结果中有外积
利用四元数表示旋转，设点为p,旋转对应的四元数为q,则旋转后的点p'=qpq-1(qq-1 = 1,q-1 = q* / ||q||^2)

二、李群和李代数
群:一种集合+一种运算  李群：有光滑性质的群
显然SO(3)和SE(3)都是李群，都对乘法封闭
李代数：通过证明知道R的导数能够由另外一个量描述，两者有R(t)＝exp(fai^*t)(当t在0附近)
也就是说fai能够描述SO(3)的正切空间
同样的道理SE(3)也有自己的李代数，为6维的

指数映射：
可以根据^操作的特殊性质和泰勒展开，求解exp的指数操作，得到类似于罗德里格斯公式的东西，这说明李代数
本身就是旋转向量组成的空间，但是SO(3)、SE(3)与李代数之间并不是一一映射的关系，这一点我们讨论旋转向量时也知道

扰动模型：
我们讨论对R和T的求导，因为R和T只有乘法操作，所以我们只能转换为对李代数求导，如果暴力求导，非常麻烦
所以提出了扰动模型，给R和T乘上一个微小量，注意这里我们都默认左乘，右乘影响也不大，具体的推导看书就行
抓住四点：
1.A^B = -B^A 
2.左乘还是右乘，和你的参数有关，当要求解的pose表示为Tw->c,那么就应该左乘，因为扰动表示在local坐标
　系下的微小变化，即为Tc'->c * Tw->c = Tc'->w;反之亦然
3.如果有的pose是Tw->c,但是我们要求Tc->w的导数，怎么处理，见notion
4.我们讨论的都是对SE(3)的求导，但是我们经常会碰到有q+t描述位姿，可以见VINS_MONO带读的推导，核心
　就是还是看成对一个6维的求导，最后一维为q的实数维，直接挂０(对于Ceres而言)，然后根据exp来做就行
那么为什么这样直接设成0呢？
https://www.cnblogs.com/JingeTU/p/11707557.html
简单来说，就是四元数是一个流形空间，描述这个空间用的参数维度大于其自由度，各个变量之间存在约束关系
如果在优化时，考虑这些问题就会比较麻烦，所以普遍的做法是将对流形的参数更新转换成对其切空间的更新
所以在localparameterization中,computejacobian描述的是流形的参数与切空间之间的关系，这样求导就转换到切空间
plus描述的就是当有了切空间的update后，如何传递回流形空间

三、相机与图像
这一章主要介绍物理坐标、相机坐标和像素坐标的概念和之间的关系
包括有1.不同坐标之间的转换关系(世界->相机->成像->像素)，对于z<0的，肯定无法被观测到,对于z<1的，可能无法被观测到
　　2.畸变的类型 3.双目相机的深度求解
深度求解：
https://blog.csdn.net/gloriazhang2013/article/details/72769835
当然，现在用的比较多的还是直接SVD解深度

四、非线性优化
两种思路
1.从滤波的思路出发，利用贝叶斯公式求解(假设噪声、观测的分布都是高斯分布)，进而求一个极大似然问题，
去估计高斯分布的参数
2.从非线性优化的角度出发，直接求解一个最小二乘问题，有梯度下降法、牛顿法、高斯牛顿法(加可信域)

五、VO
特征点匹配：
特征点一定要能表征图片的特性，比如角点、边缘、区块等等。且必须具备一些基本特性，比如对不同光照、
角度远近等等都要能够鲁邦表示、且具有独特性
为了提高鲁棒性，加上了方向信息和金字塔提取特征(实际匹配中，会先检测frame是否有前进后退，进而
确定特征点应当在下一帧的哪一层去找匹配以及匹配搜索的范围)

当我们得到很多特征点和对应的描述子后，需要进行匹配，匹配算法有FLANN(利用kd树描述描述子，然后快速匹配)
为了避免误匹配（为什么会出现误匹配？1.数据错误假设　2.噪声(相机、观测等等)　3.错误测量方法）
采用RANSAC算法，除了RANSAC算法外，还有什么办法
1.最简单的筛选，就是设置阈值，将距离过远的匹配扔掉
1.对于RANSAC改进，比如选点不是随机的，而是先进行排序

此外，ORB_SLAM中对ORB特征点做了均匀化处理
1.每一层设置了最大数量，确保分布均匀
2.利用了四叉树，递归的方式确保每个象限的特征点数量差不多一样
2.采用了对称操作，https://blog.csdn.net/qq_30356613/article/details/75231440　  说的很清楚


对极几何(2d-2d)
基本概念：
极平面:o1p1与o2p2肯定会交于p点，则o1,o2,p组成的平面称为极平面
极点:o1o2的连线与两个成像平面的交点e1e2，称为极点
基线:o1o2
极线:极平面和像平面的两条交线称为极线

对极约束要会推导，有X2TEX1=0,P2TK-TFK-1P1=0，从而问题成了求E和F

本质矩阵(E)其实就是归一化坐标下的基础矩阵
E=t^R(有9个未知数)
特性:1.尺度等价性，因为对极约束,E乘上任意非０常数，依然成立
　　 2.本质矩阵的奇异值一定是[theta,theta,0]的形式，即秩为２
　　 3.E只有5个自由度，本来R三个，t三个，但是尺度不变多了一个约束，所以就剩5个
   也就是说最少可以用5对点求E,但是E的内在性质是非线性的，直接求比较麻烦，因此可以用8点法(只考虑E的尺度不变)
对于X2TEX1=0,可以展开成线性方程式，未知数是E的9个参数，当给了8对点后(8X9的系数矩阵满秩)，就可以求出E的8个值
然后有一个自由度(尺度不变性);如果要用５点法求，要用两个条件：1.|E|=0 2.2EE'E -trace(EE')E=0
关于条件二，可以参见https://www.zhihu.com/question/60819615,也是利用了特征值的性质
   当求出E后，很可能有一个问题:求出的E的特征值并不满足形式，只要特征值满足theta1 >> theta2 >> theta3
就可以强行构造，当然也可以直接构造成[1,1,0]的形式，反正尺度不变
那么还有两个问题：1.E的特征值为什么满足这个形式  2.求出E后，求解R,t的过程
首先，我们要学会怎么求特征值
对于Ax=kx,则有(A-kI)x=0,令A-kI的行列式为０，解出k的值，就是特征值
因为x不是0，即(A-kI)x=0有非0解，其充分必要条件就是A-kI的行列式为0

Q1:
直观上看，任意矩阵与正交矩阵相乘，奇异值保持不变（奇异值分解：对于A=BR,所以AAT=BRRTBT，所以和R
无关了），所以只需要看t^（实反对称矩阵），可以看https://www.jianshu.com/p/810515b4c882证明
因为实反对称矩阵的性质，所以易得
Q2:当Q1求出之后，Q2就容易得到，然后筛选的过程可以看插图get到

单应矩阵
证明自看，核心就在于所有点都在一个平面上，满足nTP+d=0
H=(R-t*nT/d)K-1,有8个自然度，考虑到平面的三个，然后减掉尺度不变的自由度
因为尺度不变，所以一般设第9个参数为１,然后一对匹配点可以得到两个式子，进而需要4对点就可求(DLT算法)
DLT算法的结果和选取的点坐标有关系，需要对选取的点进行平移、缩放避免坐标的干扰
得到H后，反解R,t，也有四组，同样的根据深度可以删除两组，剩下的两组需要根据其他先验信息进行筛选
推导：
https://www.cnblogs.com/wangguchangqing/p/8287585.html

基础矩阵
F=K-T*EK,自由度为7，秩为２(3X3个自由度，减去一个尺度不变性，减去一个不可逆矩阵性质)
也可以证明：
https://www.zhihu.com/question/270431743/answer/1218210732
这是从F的一种推导入手，从几何角度来描述一点在两个图像上，所射出的两条线o1p1与o2p2一定会交于一点
平面A上的一点通过单应反射到平面B上，这样就有８个自由度
然后根据交于一点，就得到了两个平面坐标的关系，而F也加上了一个秩为２的限制，从而最多只有７个自由度
所以F的计算最少需要7个点，但是一般用8点法计算(https://blog.csdn.net/kokerf/article/details/72630863)
即首先根据n个点，利用SVD解最小二乘，求出F，然后再一个奇异性的限制，设最终的F为F',有|F'|=0(直接把F进行奇异值分解，然后把最后一维设成0)
再最小化F'和F的误差

关于E,F,H的一些问题
1.单应矩阵 H 和基础矩阵 F 的区别（至少两个方面），推导两者的求解过程及改进求解的方法
答：首先，H加上了点都落到一个平面上的约束，H就是F的特殊情况；其次，F描述的是任意的点，在两个图像之间的关系
也可以说成是描述二维图像中的目标点在三维空间的位置关系，而H描述的是共同平面上的点在两个图像上的关系
H就是一个简单的二维变换；再者，F描述点与线的关系，而H不在意这个点到底是不是平面坐标，归一化也可以；

答:关于求解，可以从两方面入手1.代数约束，就是拆成代数表达式，足够的点就行 2.几何约束，可以考虑重投影误差，优化求解
H的求解过程中，可以对点的坐标进行优化，避免坐标带来的影响
在实际过程中，往往H和F都会求，再根据重投影误差的大小来确定用哪个

2.对于单目相机，F和H矩阵有何不同，E和F矩阵有何不同，只旋转不平移能不能求F、能不能求H？
F和H的不同，只需要给出表达式就行
只有旋转，F完全没法求，而H中的R部分可以求出来，也就是说H可以求，但是没法求深度

3.本质矩阵E，基础矩阵F，单应矩阵H 自由度分别是多少？为什么？
答：矩阵的自由度是指：想要解矩阵中的未知参数，需要通过列几个线性方程组？对于nn的矩阵，如果该矩阵存在k个约束，那么其自由度为nn-k。
其中，基础矩阵7个自由度，本质矩阵5个自由度，单应性矩阵8个自由度。
F:基础矩阵有9个，然后尺度不确定和秩为２，各拿走一个，也可以从另外一个角度说，首先平面上的点x通过单应变换
得到另外一个平面上的点x'，再然后可以求出x'与极点e1之间的连线(通过外积)，最后x'肯定在这条线上
得到了F=e1^H,H有8个自由度,e1^为实反对称矩阵，所以秩为２，又多了一个限制
E:E=t^R,R三个，t三个，尺度不变性去掉一个
H:3X3，然后尺度不变拿走一个

4.当出现多于8对点的情况，怎么处理
构建超定方程，然后最小化一个二乘问题||Ae||^2，即eTATAe，然后求解,对应的解就是A的最小奇异值对应的奇异向量
前提是A的最后两个特征值，差距很大

5.单目的初始化指？
可以对两个图像之间的t归一化，也可以将深度归一化（所有点的深度平均值为１）

6.为了提高求解E,F,H的质量，应该怎么做？
对点的坐标进行各向同性归一化处理，将各个点进行平移缩放到坐标原点的均方根等于根号2
ORB_SLAM中采用了非各向同性归一化
同向归一化为测量数据选择了有效的标准坐标系，预先消除了坐标变换的影响，也可以降低outer的影响
非同向在非各向同性缩放中，点的形心（面的形心就是截面图形的几何中心）和前面一样平移到原点，
经平移后点在原点附近形成云。然后进行坐标尺度缩放使该点集的两主矩都等于1。
这样使该点集形成以原点为中心，半径为1的近似的对称圆云

7.如果给定的特征点共面或者共线会有什么情况
特征点共面，求H就行，这也是为什么要引入H
如果共线，H也解不了

8.如何估计给定的T的不确定度

总结：
https://www.cnblogs.com/youzx/p/6385513.html

三角化
可以直接构造等式，求解s1,s2
也可以利用SVD的方法，对超定方程进行求解，但是这种方法对外点不鲁棒
也可以利用滤波的方法，比如深度滤波，不断的降低点的方差，得到深度信息(稠密)
此外，平移的越大，像素上的不确定度越小，但是使外观发生变化
这个问题称为视差，即平移大，可能导致匹配失败，平移小，可能导致三角化精度不够
那么问题来了，ORB和VINS分别是怎么三角化的？
都是直接的SVD


pnp问题(2d-3d)
1.无脑BA,直接优化Ｒ,t还有深度，可能需要求解Jacobian
2.线性变化每一组3d-2d，就对Puv = K(RPc + t)等式提供两个约束
因为R和t总共１２个数据，所以至少6组点才行，超定也可以用SVD求解
3.p3p方法，只需要３组匹配点进行求解，还需要一组点验证，也就是４组，直接利用相似三角形的关系求解

ICP(3d-3d)
1.BA就完事了
2.SVD:a.求解3d点的质心 b.优化纯旋转问题　3.反解t
SVD在匹配已知的情况下，能得到确定的最优解，如果匹配未知，则比较麻烦，因此在2d-3d和3d-3d混合的情况下
用优化更合理，整合成一个问题


直接法和光流法
特征点法1.耗时长 2.丢失大量信息  3.特征缺失则效果差、
如果用光流法，则还是用特征点，但是不算描述子，直接光流跟踪，计算还需要用对极几何、pnp等
如果用直接法，直接BA，最小化光度误差，而不在意匹配关系

光流法(LK光流)的假设：
1.同一空间点的像素灰度值，在各个图像中固定不变(找到关系对应)
2.某个窗口内的像素具有相同的运动(构建超定方程)
利用金字塔后，每一层求解的u,v就是下一层的初始值
当求出了u,v后，就得到了上一帧的特征点和下一帧的特征点的关系，再利用特征点的方法就行
但是直接发没有考虑相机自身的结构、没有考虑图像存在的旋转、缩放问题、边界点也不好处理


直接法
依然是基于灰度不变假设，然后最小化灰度误差
直接法优点：1.快 2.纹理缺失也能用 3.可以构建稠密、半稠密地图
直接法缺点：1.依靠像素梯度，非凸，只有相机运动不大时才能成立  2.单个像素没有区分，只能投票来定优化方向 3.灰度不变的假设太强了
改进：对于距离近的点，梯度变化应该更快，距离远的点，应该慢一点

VO的思路比较清楚，基本上到此为止，下面进入到后端优化

后端
1.滤波方法
滤波方法主要是KF和EKF，得到状态的预测和更新方程，从而优化
需要进一步证明和推导，待会看
但是存在问题
1.马尔科夫性的假设
2.线性展开实际上只在很小的区域上有效
3.EKF需要存储所有状态的均值和方差，不适合大型场景
4.没有异常检测机制，对于外点没有鲁棒性


非线性优化方法就传统了
1.Jocabian的组合形式(Jij为2X(Size_C+Size_P)),然后一列列组合到一起
2.舒尔补是一个半正定矩阵，这一点当我们在利用schur消元进行边缘化操作时，确保了分离出来的部分依然是高斯分布
  因为高斯分布的协方差矩阵一定是对称的半正定矩阵
3.可以从概率的角度分析为什么边缘化和舒尔补是一致的,关键就在于信息矩阵不好拆分，所以要用schur来拆掉
https://blog.csdn.net/heyijia0327/article/details/52822104
4.可以参考VIO_STUDY中的信息，从概率的角度出发，解释了marge后留下的信息，作为了下一次的先验信息
  即一个新的协方差矩阵构建的Hx=b中的H和b,我们可以从中反解出J和误差，作为Ceres下一次优化的信息，这也是
  VINS中的做法，在DSO中就直接保留了H和b，等下一次用。之后的优化过程中，误差可能会变小，但是J的计算一定是最开始marge时候用的那个固定下来了
  


